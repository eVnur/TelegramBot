#–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ aiogram - https://docs.aiogram.dev/en/latest/
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from config import token
from dbase import User
from functions import SearchPhoto, RecordVoiceMsg, VideoSearch, commands

bot = Bot(token=token)#–¢–æ–∫–µ–Ω –±–æ—Ç–∞
dp = Dispatcher(bot)

@dp.message_handler(commands="reg")
async def reg_handler(message: types.Message):
	userID = message.from_user.id
	username = message.from_user.first_name
	reg = await User.Reg(userID,username)
	await message.reply(reg)

@dp.message_handler(commands="del")
async def del_handler(message: types.Message):
	userID = message.from_user.id
	username = message.from_user.first_name
	reg = await User.Del(userID,username)
	await message.reply(reg)

@dp.message_handler(commands="info")
async def info_handler(message: types.Message):
	userID = message.from_user.id
	info = await User.Info(userID)
	await bot.send_message(userID,info)

@dp.message_handler(commands='help')
async def help_handler(message:types.Message):
	await bot.send_message(message.from_user.id,commands,parse_mode=types.ParseMode.HTML)

@dp.message_handler(commands='—Ñ–æ—Ç–æ')
async def send_handler(message : types.Message):
	response = await SearchPhoto(message.get_args())
	try:
		await bot.send_photo(message.from_user.id,types.InputFile.from_url(f'https:{response}'),
			f'üîç –í–æ—Ç —á—Ç–æ –Ω–∞—à–ª–æ—Å—å –ø–æ –∑–∞–ø—Ä–æ—Å—É: <b>{message.get_args()}</b>',parse_mode=types.ParseMode.HTML)#–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –ø–æ —Å—Å—ã–ª–∫–µ
	except Exception:
		await message.reply('‚ùå–£–∫–∞–∂–∏—Ç–µ –∑–∞–ø—Ä–æ—Å (/—Ñ–æ—Ç–æ <–∑–∞–ø—Ä–æ—Å>)')

@dp.message_handler(commands='–≥—Å')
async def send_voice(message:types.Message):
	text = message.get_args()
	
	try:
		if len(text) > 50:
			await message.reply('‚ùå–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤')
		else:
			voiceMsg = await RecordVoiceMsg(text,message.from_user.id)
			await bot.send_voice(message.from_user.id,types.InputFile(voiceMsg),f'üé§ {message.from_user.first_name}, –≤–æ—Ç –≤–∞—à –æ–∑–≤—É—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç')#–û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	except Exception:
		await message.reply('‚ùå–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏ (/–≥—Å <—Ç–µ–∫—Å—Ç>)')

@dp.message_handler(commands='–≤–∏–¥–µ–æ')
async def send_video(message:types.Message):
	req = message.get_args()
	video = await VideoSearch(req)
	await bot.send_message(message.from_user.id,f'–í–æ—Ç —á—Ç–æ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: {req}\n{video}')

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    print('[+] Bot is running!')
    executor.start_polling(dp, skip_updates=False)